name: RTSP AI Inference CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: rtsp-ai-inference

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      # Fast fail for syntax/undefined names
      - name: flake8 (errors only)
        run: flake8 app.py --select=E9,F63,F7,F82 --show-source --statistics

      # Full report (non-blocking); remove --exit-zero if you want strict
      - name: flake8 (full, non-blocking)
        run: flake8 app.py --exit-zero --max-line-length=100 --statistics

  build-and-push:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login only on main so other branches don't need secrets
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Tags:
      # - latest (only on main)
      # - branch name
      # - short SHA
      - name: Compute tags
        id: meta
        run: |
          SHA_TAG=${GITHUB_SHA::7}
          BRANCH_TAG=${GITHUB_REF_NAME//\//-}
          echo "sha_tag=${SHA_TAG}" >> $GITHUB_OUTPUT
          echo "branch_tag=${BRANCH_TAG}" >> $GITHUB_OUTPUT
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            echo "latest=true" >> $GITHUB_OUTPUT
          else
            echo "latest=false" >> $GITHUB_OUTPUT
          fi

      - name: Build (and push on main)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.branch_tag }}
            ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.latest == 'true' && format('{0}/{1}/{2}:latest', env.REGISTRY, secrets.DOCKERHUB_USERNAME, env.IMAGE_NAME) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  simulate-deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Pull latest image
        run: docker pull ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      # Runner pe webcam nahi hota, isliye sirf health-check run (device-independent)
      - name: Ephemeral health-check "deployment"
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest \
            python app.py --health-check

